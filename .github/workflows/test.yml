name: Test

on:
  push:
    paths:
      - 'lib/components/**/*.tsx'
    branches:
      - main
  pull_request:
    paths:
      - 'lib/components/**/*.tsx'
    branches:
      - main

jobs:
  check-and-run-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Dependencies
        run: npm install

      - name: Get modified component files and validate tests
        id: modified
        run: |
          echo "Finding modified component files..."

          # Choose diff target depending on event type
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            git diff --name-only origin/${{ github.base_ref }} > changed_files.txt
          else
            git diff --name-only HEAD~1 > changed_files.txt
          fi

          cat changed_files.txt

          MODIFIED_TESTS=""

          while read file; do
            # Only consider .tsx files inside lib/components
            if [[ "$file" == lib/components/*.tsx ]]; then
              name=$(basename "$file" .tsx)
              test_path="tests/components/${name}.test.tsx"

              if [[ -f "$test_path" ]]; then
                echo "Found test for $file"
                MODIFIED_TESTS+="$test_path "
              else
                echo "::error file=$file:: Missing test file for component. Expected: $test_path"
                exit 1
              fi
            fi
          done < changed_files.txt

          echo "test_paths=$MODIFIED_TESTS" >> $GITHUB_OUTPUT

      - name: Run tests for modified components
        if: steps.modified.outputs.test_paths != ''
        run: |
          echo "Running tests for: ${{ steps.modified.outputs.test_paths }}"
          npm test -- ${{ steps.modified.outputs.test_paths }}
